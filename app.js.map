{"mappings":"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","sources":["public/js/index.js","public/js/login.js","public/js/alerts.js","public/js/mapbox.js","public/js/updateSettings.js","utils/catchAsync.js","public/js/stripe.js","public/js/signup.js","public/js/reviewCard.js","public/js/review.js","public/js/admin.js"],"sourcesContent":["/*eslint=disable*/\r\n//import '@babel/polyfill';\r\nimport { login, logout } from './login.js';\r\nimport { displayMap } from './mapbox.js';\r\nimport { updateSettings } from './updateSettings.js';\r\nimport { bookTour } from './stripe.js';\r\nimport { signup } from './signup.js';\r\nimport { reviewCardInit } from './reviewCard.js';\r\nimport {\r\n  handleDeleteUser,\r\n  handleRequest,\r\n  handleTourModal,\r\n  handleUserModal,\r\n} from './admin.js';\r\n// DOM ELEMENTS\r\n\r\nconst mapBox = document.getElementById('map');\r\nconst loginForm = document.querySelector('.form--login');\r\nconst signupForm = document.querySelector('.form--signup');\r\nconst userDataForm = document.querySelector('.form-user-data');\r\nconst logOutBtn = document.querySelector('.nav__el--logout');\r\nconst userPasswordForm = document.querySelector('.form-user-password');\r\nconst bookBtn = document.getElementById('book-tour');\r\nconst reviewPage = document.querySelector('.card.cardReview');\r\nconst userCardPage = document.querySelectorAll('.card.cardAdmin');\r\nconst editTours = document.querySelector('.edit__tours');\r\nconst formPhoto = document.querySelector('.form__user-photo');\r\nconst modalContainer = document.getElementById('modal-container');\r\n\r\n// DELEGATION\r\nif (mapBox) {\r\n  const locations = JSON.parse(mapBox.dataset.locations);\r\n  displayMap(locations);\r\n}\r\n\r\nif (loginForm) {\r\n  loginForm.addEventListener('submit', (e) => {\r\n    e.preventDefault();\r\n    const email = document.getElementById('email').value;\r\n    const password = document.getElementById('password').value;\r\n    login(email, password);\r\n  });\r\n}\r\nif (logOutBtn) {\r\n  logOutBtn.addEventListener('click', logout);\r\n}\r\n\r\nif (userDataForm) {\r\n  userDataForm.addEventListener('submit', async (e) => {\r\n    e.preventDefault();\r\n    const form = new FormData();\r\n    form.append('name', document.getElementById('name').value);\r\n    form.append('email', document.getElementById('email').value);\r\n    form.append('photo', document.getElementById('photo').files[0]);\r\n    await updateSettings(form, 'data');\r\n  });\r\n}\r\n\r\nif (userPasswordForm) {\r\n  userPasswordForm.addEventListener('submit', async (e) => {\r\n    e.preventDefault();\r\n    document.querySelector('.btn--save-password').textContent = 'Updating...';\r\n    const passwordCurrent = document.getElementById('password-current').value;\r\n    const passwordConfirm = document.getElementById('password-confirm').value;\r\n    const password = document.getElementById('password').value;\r\n    await updateSettings(\r\n      { passwordCurrent, passwordConfirm, password },\r\n      'password'\r\n    );\r\n    document.querySelector('.btn--save-password').textContent = 'Save Password';\r\n    document.getElementById('password-current').value = '';\r\n    document.getElementById('password-confirm').value = '';\r\n    document.getElementById('password').value = '';\r\n  });\r\n}\r\n\r\nif (signupForm) {\r\n  signupForm.addEventListener('submit', async (e) => {\r\n    e.preventDefault();\r\n    const name = document.getElementById('name').value;\r\n    const email = document.getElementById('email').value;\r\n    const password = document.getElementById('password').value;\r\n    const passwordConfirm = document.getElementById('confirm').value;\r\n    await signup(name, email, password, passwordConfirm);\r\n  });\r\n}\r\n\r\nif (bookBtn) {\r\n  bookBtn.addEventListener('click', (e) => {\r\n    e.target.textContent = 'Processing...';\r\n    const { tourId } = e.target.dataset;\r\n    bookTour(tourId);\r\n  });\r\n}\r\n\r\nif (reviewPage) {\r\n  const reviewsCard = document.querySelectorAll('.card');\r\n  reviewsCard.forEach((review) => {\r\n    const editButton = review.querySelectorAll('.edit');\r\n    const ratingStars = review.querySelectorAll('.reviews__star');\r\n    const reviewText = review.querySelector('.card__text');\r\n    const textBox = document.createElement('input');\r\n    reviewCardInit(editButton, ratingStars, reviewText, textBox);\r\n  });\r\n}\r\n\r\n// refactor later probably\r\nif (userCardPage) {\r\n  const adminCard = document.querySelectorAll('.card.cardAdmin');\r\n  adminCard.forEach((card) => {\r\n    const updateButton = card.querySelector('.btn--update');\r\n    const deletebutton = card.querySelector('.btn--delete');\r\n    const userJson = JSON.parse(updateButton.dataset.user);\r\n\r\n    deletebutton.addEventListener('click', (e) => {\r\n      e.preventDefault();\r\n      handleRequest(userJson._id, 'delete', 'users');\r\n    });\r\n    updateButton.addEventListener('click', (e) => {\r\n      e.preventDefault();\r\n      formPhoto.src = `/img/users/${userJson.photo}`;\r\n\r\n      handleUserModal(modalContainer, userJson._id, e.target);\r\n    });\r\n  });\r\n  window.addEventListener('click', (e) => {\r\n    if (e.target === modalContainer) {\r\n      modalContainer.style.display = 'none';\r\n      document.body.style.overflow = 'auto';\r\n    }\r\n  });\r\n}\r\n\r\nif (editTours) {\r\n  const tourCard = document.querySelectorAll('.card');\r\n\r\n  tourCard.forEach((card) => {\r\n    const editButton = card.querySelector('.btn--edit');\r\n    const tourJson = JSON.parse(editButton.dataset.tour);\r\n    editButton.addEventListener('click', (e) => {\r\n      e.preventDefault();\r\n      formPhoto.src = `/img/tours/${tourJson.imageCover}`;\r\n      handleTourModal(modalContainer, tourJson.id, e.target);\r\n    });\r\n  });\r\n}\r\n\r\nif (document.querySelector('.admin__reviews')) {\r\n  const reviewsCard = document.querySelectorAll('.admin__reviews__card');\r\n  reviewsCard.forEach((review) => {\r\n    const deleteButton = review.querySelector('.delete');\r\n    deleteButton.addEventListener('click', (e) => {\r\n      e.preventDefault();\r\n      handleRequest(deleteButton.dataset.id, 'delete', 'reviews');\r\n    });\r\n  });\r\n}\r\n","import axios from 'axios';\r\n//import '@babel/polyfill';\r\n// import 'core-js/stable';\r\n// import 'regenerator-runtime/runtime.js';\r\nimport { showAlert } from './alerts';\r\n/**\r\n * Logs in a user with the given email and password.\r\n *\r\n * @param {string} email - The email of the user.\r\n * @param {string} password - The password of the user.\r\n */\r\nexport const login = async (email, password) => {\r\n  try {\r\n    // Make a POST request to the login API endpoint\r\n    const res = await axios({\r\n      method: 'post',\r\n      url: '/api/v1/users/login',\r\n      data: {\r\n        email,\r\n        password,\r\n      },\r\n    });\r\n\r\n    // If login is successful, show a success alert and redirect to home page\r\n    if (res.data.status === 'success') {\r\n      showAlert('success', 'Logged in successfully');\r\n      window.setTimeout(() => {\r\n        location.assign('/');\r\n      }, 100);\r\n    }\r\n  } catch (error) {\r\n    // If an error occurs, show an error alert with the error message\r\n    showAlert('success', error.response.data.message);\r\n  }\r\n};\r\n\r\n/**\r\n * Logout function\r\n * Sends a GET request to the logout API endpoint\r\n * Redirects the user to the homepage if logout is successful\r\n * Displays an error message if there is an error logging out\r\n */\r\nexport const logout = async () => {\r\n  try {\r\n    const res = await axios({\r\n      method: 'GET',\r\n      url: '/api/v1/users/logout',\r\n    });\r\n\r\n    if ((res.data.status = 'success')) {\r\n      // Redirect to homepage if the current URL ends with '/me'\r\n      location.assign(\r\n        window.location.href.endsWith('/me') ? '/' : window.location.href\r\n      );\r\n    }\r\n  } catch (err) {\r\n    // Display an error message if there is an error logging out\r\n    showAlert('error', 'Error logging out!');\r\n  }\r\n};\r\n","//type = success/error\r\nexport const showAlert = (type, msg) => {\r\n  hideAlert();\r\n  const markup = `<div class=\"alert alert--${type}\">${msg}</div>`;\r\n  document.querySelector('body').insertAdjacentHTML('afterbegin', markup);\r\n};\r\n\r\nexport const hideAlert = () => {\r\n  const el = document.querySelector('.alert');\r\n  if (el) el.parentElement.removeChild(el);\r\n  window.setTimeout(hideAlert, 5000);\r\n};\r\n","/* eslint-disable */\r\n\r\nexport const displayMap = (locations) => {\r\n  mapboxgl.accessToken =\r\n    'pk.eyJ1IjoidGhlYmFzZWR0YWthIiwiYSI6ImNscTFsem8weDA3Z24ya3IybzBmYmNsMGEifQ.OL3LE5eLigkP4MjRgcTKAA';\r\n\r\n  var map = new mapboxgl.Map({\r\n    container: 'map',\r\n    style: 'mapbox://styles/thebasedtaka/clq4kgz3f01at01qm44ycgvsq',\r\n    scrollZoom: false,\r\n    // center: [-118.113491, 34.111745],\r\n    // zoom: 10,\r\n    // interactive: false\r\n  });\r\n\r\n  const bounds = new mapboxgl.LngLatBounds();\r\n\r\n  locations.forEach((loc) => {\r\n    // Create marker\r\n    const el = document.createElement('div');\r\n    el.className = 'marker';\r\n\r\n    // Add marker\r\n    new mapboxgl.Marker({\r\n      element: el,\r\n      anchor: 'bottom',\r\n    })\r\n      .setLngLat(loc.coordinates)\r\n      .addTo(map);\r\n\r\n    // Add popup\r\n    new mapboxgl.Popup({\r\n      offset: 30,\r\n    })\r\n      .setLngLat(loc.coordinates)\r\n      .setHTML(`<p>Day ${loc.day}: ${loc.description}</p>`)\r\n      .addTo(map);\r\n\r\n    // Extend map bounds to include current location\r\n    bounds.extend(loc.coordinates);\r\n  });\r\n\r\n  map.fitBounds(bounds, {\r\n    padding: {\r\n      top: 200,\r\n      bottom: 150,\r\n      left: 100,\r\n      right: 100,\r\n    },\r\n  });\r\n};\r\n","import axios from 'axios';\r\nimport { showAlert } from './alerts';\r\nimport catchAsync from '../../utils/catchAsync';\r\n/**\r\n * Update user settings\r\n * @param {Object} data - The data to update\r\n * @param {string} type - The type of data to update ('password' or 'general')\r\n */\r\nexport const updateSettings = async (data, type) => {\r\n  try {\r\n    // Define the API endpoint based on the type of data to update\r\n    const url =\r\n      type === 'password'\r\n        ? '/api/v1/users/updateMyPassword'\r\n        : '/api/v1/users/updateMe';\r\n\r\n    // Send a patch request to the API endpoint with the updated data\r\n    const res = await axios({\r\n      method: 'patch',\r\n      url,\r\n      data,\r\n    });\r\n\r\n    // If the update is successful, show a success message and redirect to the user's profile page\r\n    if (res.data.status === 'success') {\r\n      showAlert('success', `${type.toUpperCase()} data updated successfully!`);\r\n      window.location.href = '/me';\r\n    }\r\n  } catch (error) {\r\n    // If there is an error, show an error message\r\n    showAlert('error', error.response.data.message);\r\n  }\r\n};\r\n","module.exports = (fn) => {\r\n  return (req, res, next) => {\r\n    fn(req, res, next).catch((err) => next(err));\r\n  };\r\n};\r\n","import catchAsync from '../../utils/catchAsync';\r\nimport { showAlert } from './alerts';\r\nimport axios from 'axios';\r\nconst stripe = Stripe(\r\n  'pk_test_51OOZMBBhpjB6GUEeu7qGaNrGdPp4bTmznCwCTjemnYXUD9x93IIFsG4zFrkFIN5xwFVpaeS00lDGmpeKFufp1PT500zMumsTpU'\r\n);\r\n\r\n/**\r\n * Book a tour by retrieving a checkout session and redirecting to checkout.\r\n * @param {string} tourId - The ID of the tour to book.\r\n */\r\nexport const bookTour = async (tourId) => {\r\n  try {\r\n    // Retrieve the checkout session for the given tour ID\r\n    const session = await axios({\r\n      method: 'GET',\r\n      url: `/api/v1/booking/checkout-session/${tourId}`,\r\n    });\r\n\r\n    // Redirect to the checkout page using the session ID\r\n    await stripe.redirectToCheckout({ sessionId: session.data.session.id });\r\n  } catch (error) {\r\n    // Handle any errors that occur during the booking process\r\n    console.error('error', error);\r\n  }\r\n};\r\n","import axios from 'axios';\r\nimport catchAsync from '../../utils/catchAsync';\r\nimport { showAlert } from './alerts';\r\n\r\n/**\r\n * Sign up a user with the provided credentials\r\n * @param {string} name - The name of the user\r\n * @param {string} email - The email of the user\r\n * @param {string} password - The password of the user\r\n * @param {string} passwordConfirm - The password confirmation of the user\r\n */\r\nexport const signup = async (name, email, password, passwordConfirm) => {\r\n  try {\r\n    // Make a POST request to the signup endpoint\r\n    const res = await axios({\r\n      method: 'post',\r\n      url: '/api/v1/users/signup',\r\n      data: {\r\n        name,\r\n        email,\r\n        password,\r\n        passwordConfirm,\r\n      },\r\n    });\r\n\r\n    // If the response status is success, show a success alert and redirect to /me\r\n    if (res.data.status === 'success') {\r\n      showAlert('success', 'Logged in successfully');\r\n      window.setTimeout(() => {\r\n        location.assign('/me');\r\n      }, 100);\r\n    }\r\n  } catch (error) {\r\n    // Log any errors that occur during the signup process\r\n    console.error(error);\r\n  }\r\n};\r\n","import { editReview } from './review';\r\n/**\r\n * Initializes the review card functionality.\r\n * @param {Array} editButton - Array of edit buttons.\r\n * @param {Array} ratingStars - Array of rating stars.\r\n * @param {HTMLElement} reviewsCard - The reviews card element.\r\n * @param {HTMLElement} reviewText - The review text element.\r\n * @param {HTMLInputElement} textBox - The text input element.\r\n */\r\nexport function reviewCardInit(editButton, ratingStars, reviewText, textBox) {\r\n  let reviewId, reviewBody;\r\n  let rating;\r\n  let hoveredStar;\r\n  let edit = false;\r\n\r\n  /**\r\n   * Updates the star classes based on the hovered star.\r\n   */\r\n  function updateStarClasses() {\r\n    ratingStars.forEach((star, index) => {\r\n      star.classList.toggle('hovered', index < hoveredStar);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handles the mouse enter event on the rating stars.\r\n   */\r\n  function handleMouseEnter(e) {\r\n    // Get the index of the hovered star\r\n    if (!edit) return;\r\n    const index = Array.from(ratingStars).indexOf(e.target);\r\n    hoveredStar = index + 1;\r\n    updateStarClasses();\r\n  }\r\n\r\n  /**\r\n   * Handles the mouse exit event on the rating stars.\r\n   */\r\n  function handleMouseExit() {\r\n    hoveredStar = null;\r\n    updateStarClasses();\r\n  }\r\n\r\n  /**\r\n   * Handles the click event on the rating stars.\r\n   */\r\n  function handleClick(e) {\r\n    // selects the clicked star and if there is an image, it reroutes to the parent\r\n    const clickedStar =\r\n      e.target.nodeName === 'use' ? e.target.parentNode : e.target;\r\n    rating = +clickedStar.dataset.starIndex + 1;\r\n    // removes the hover effect\r\n    hoveredStar = rating;\r\n    updateStarClasses();\r\n    e.target.removeEventListener('mouseover', handleMouseEnter);\r\n    e.target.removeEventListener('mouseout', handleMouseExit);\r\n    e.target.removeEventListener('click', handleClick);\r\n  }\r\n\r\n  // Add event listeners to the rating stars\r\n  ratingStars.forEach((star) => {\r\n    star.addEventListener('mouseover', handleMouseEnter);\r\n    star.addEventListener('mouseout', handleMouseExit);\r\n    star.addEventListener('click', handleClick);\r\n  });\r\n\r\n  // Add event listeners to the edit buttons\r\n  editButton.forEach((btn) => {\r\n    btn.addEventListener('click', (e) => {\r\n      if (edit) {\r\n        // Code for the second button press functionality\r\n        reviewId = btn.dataset.reviewId;\r\n        reviewBody =\r\n          e.target.parentNode.parentNode.querySelector('.form__input');\r\n        edit = false;\r\n        editReview(reviewId, reviewBody.value, rating);\r\n        textBox.replaceWith(reviewText);\r\n      } else {\r\n        // Code for the first button press functionality\r\n        edit = true;\r\n        e.target.textContent = 'Update Review';\r\n        textBox.classList.add('form__input');\r\n        textBox.value = reviewText.textContent;\r\n        // Replace the text node with the input node\r\n        reviewText.replaceWith(textBox);\r\n      }\r\n    });\r\n  });\r\n}\r\n","import axios from 'axios';\r\nimport { showAlert } from './alerts';\r\n/**\r\n * Edits a review.\r\n *\r\n * @param {string} id - The ID of the review to be edited.\r\n * @param {string} body - The updated review text.\r\n * @param {number} rating - The updated rating.\r\n */\r\nexport const editReview = async (id, body, rating) => {\r\n  // Create an empty object to store the params\r\n  const params = {};\r\n\r\n  // If  parameter is provided, add it to the params object\r\n  if (body) params.review = body;\r\n  if (rating) params.rating = +rating;\r\n\r\n  // If no parameters were provided, return early\r\n  if (Object.keys(params).length === 0) return;\r\n\r\n  try {\r\n    // Construct the URL for the API endpoint\r\n    const url = `/api/v1/reviews/${id}`;\r\n\r\n    // Send a PATCH request to the API endpoint with the params object\r\n    const res = await axios.patch(url, params);\r\n\r\n    // If the request is successful, display a success message and reload the page\r\n    if (res.data.status === 'success') {\r\n      showAlert('success', 'Review updated successfully!');\r\n      window.setTimeout(() => {\r\n        location.reload();\r\n      }, 100);\r\n    }\r\n  } catch (error) {\r\n    // If an error occurs, display an error message\r\n    showAlert('error', error.response.data.message);\r\n  }\r\n};\r\n","import axios from 'axios';\r\nimport { showAlert } from './alerts';\r\n\r\nexport const handleUserModal = (modalContainer, id, e) => {\r\n  const submitButton = document.querySelector('#submit');\r\n  const dropdown = document.querySelector('#role');\r\n  let selectedOptionValue;\r\n  dropdown.addEventListener('change', (event) => {\r\n    selectedOptionValue = event.target.value;\r\n  });\r\n  submitButton.addEventListener('click', async (e) => {\r\n    e.preventDefault();\r\n\r\n    const form = new FormData();\r\n\r\n    form.append('name', document.getElementById('name').value);\r\n    form.append('email', document.getElementById('email').value);\r\n    form.append('password', document.getElementById('password').value);\r\n    form.append('photo', document.getElementById('photo').files[0]);\r\n    form.append('role', selectedOptionValue);\r\n    //await UserUpdate(id, form, modalContainer);\r\n    await handleRequest(id, 'patch', 'users', form);\r\n  });\r\n  modalContainer.style.display = 'flex';\r\n\r\n  if (e.target === modalContainer) {\r\n    modalContainer.style.display = 'none';\r\n  }\r\n};\r\n\r\nexport const handleTourModal = (modalContainer, id, e) => {\r\n  const submitButton = document.querySelector('#submit');\r\n  const dropdown = document.querySelector('#difficultyDropdown');\r\n  const date = document.getElementById('date');\r\n  let difficultyValue;\r\n  let dateValue;\r\n\r\n  dropdown.addEventListener('change', (event) => {\r\n    difficultyValue = event.target.value;\r\n  });\r\n\r\n  date.addEventListener('change', (event) => {\r\n    dateValue = event.target.value;\r\n  });\r\n\r\n  submitButton.addEventListener('click', async (e) => {\r\n    e.preventDefault();\r\n\r\n    const form = new FormData();\r\n\r\n    form.append('name', document.querySelector('#tourName').value);\r\n    form.append('difficulty', difficultyValue);\r\n    form.append('duration', document.querySelector('#durationInput').value);\r\n    form.append(\r\n      'maxGroupSize',\r\n      document.querySelector('#maxGroupSizeInput').value\r\n    );\r\n\r\n    form.append('startDates', dateValue);\r\n    form.append('price', document.querySelector('#price').value);\r\n    form.append(\r\n      'description',\r\n      document.querySelector('#tourDescription').value\r\n    );\r\n    handleRequest(id, 'patch', 'tours', form);\r\n  });\r\n\r\n  modalContainer.style.display = 'flex';\r\n  document.body.style.overflow = 'hidden'; // Disable scrolling on the body\r\n\r\n  const closeModal = () => {\r\n    document.body.style.overflow = 'auto'; // Enable scrolling on the body\r\n    modalContainer.style.display = 'none';\r\n    modalContainer.removeEventListener('click', closeModal);\r\n  };\r\n\r\n  if (e.target === modalContainer) {\r\n    closeModal();\r\n  }\r\n};\r\n\r\nexport const handleRequest = async (id, method, route, data) => {\r\n  try {\r\n    const url = `/api/v1/${route}/${id}`;\r\n    const res = await axios({\r\n      method,\r\n      url,\r\n      data,\r\n    });\r\n    if (res.status === 204 || res.status === 200) {\r\n      showAlert('success', `Tour ${method} successful`);\r\n      window.location.reload();\r\n    } else {\r\n      // Handle other status codes or errors\r\n      console.error(`Unexpected status code: ${res.status}`);\r\n    }\r\n  } catch (error) {\r\n    showAlert('error', error);\r\n  }\r\n};\r\n"],"names":[],"version":3,"file":"app.js.map"}